// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Unistream.Domain.Entities.Balance;
using Unistream.Infrastructure;

#nullable disable

namespace Unistream.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Unistream.Domain.Entities.Balance.Balance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<List<Event>>("Events")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.HasKey("Id");

                    b.HasIndex("ClientId")
                        .IsUnique();

                    b.ToTable("Balances");
                });

            modelBuilder.Entity("Unistream.Domain.Entities.Client.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cfaa0d3f-7fea-4423-9f69-ebff826e2f89")
                        });
                });

            modelBuilder.Entity("Unistream.Domain.Entities.Transaction.BaseTransaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("character varying(21)");

                    b.Property<DateTime>("InsertDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("NOW()");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Transactions");

                    b.HasDiscriminator().HasValue("BaseTransaction");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Unistream.Domain.Entities.Transaction.CreditTransaction", b =>
                {
                    b.HasBaseType("Unistream.Domain.Entities.Transaction.BaseTransaction");

                    b.HasDiscriminator().HasValue("CreditTransaction");
                });

            modelBuilder.Entity("Unistream.Domain.Entities.Transaction.DebitTransaction", b =>
                {
                    b.HasBaseType("Unistream.Domain.Entities.Transaction.BaseTransaction");

                    b.HasDiscriminator().HasValue("DebitTransaction");
                });

            modelBuilder.Entity("Unistream.Domain.Entities.Balance.Balance", b =>
                {
                    b.HasOne("Unistream.Domain.Entities.Client.Client", null)
                        .WithOne()
                        .HasForeignKey("Unistream.Domain.Entities.Balance.Balance", "ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Unistream.Domain.Entities.Transaction.BaseTransaction", b =>
                {
                    b.HasOne("Unistream.Domain.Entities.Client.Client", null)
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
